#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node* next;
};

struct Node* newNode(int data) {
    struct Node* node = (struct Node*)malloc(sizeof(struct Node));
    node->data = data;
    node->next = NULL;
    return node;
}

struct Node* intersectSLL(struct Node* head1, struct Node* head2) {
    struct Node* result = NULL;
    struct Node* tail = NULL;

    while (head1 != NULL && head2 != NULL) {
        if (head1->data == head2->data) {
            if (result == NULL) {
                result = newNode(head1->data);
                tail = result;
            } else {
                tail->next = newNode(head1->data);
                tail = tail->next;
            }
            head1 = head1->next;
            head2 = head2->next;
        } else if (head1->data < head2->data) {
            head1 = head1->next;
        } else {
            head2 = head2->next;
        }
    }

    return result;
}

void printSLL(struct Node* head) {
    struct Node* current = head;
    while (current != NULL) {
        printf("%d ", current->data);
        current = current->next;
    }
    printf("\n");
}

int main() {
    printf("reg_no:192324134\n");
    struct Node* head1 = newNode(1);
    head1->next = newNode(2);
    head1->next->next = newNode(3);
    head1->next->next->next = newNode(4);
    head1->next->next->next->next = newNode(5);
    struct Node* head2 = newNode(3);
    head2->next = newNode(4);
    head2->next->next = newNode(5);
    head2->next->next->next = newNode(6);
    head2->next->next->next->next = newNode(7);

    struct Node* intersection = intersectSLL(head1, head2);

    printf("Intersection: ");
    printSLL(intersection);

    return 0;
}
